# version: '1'

# services:
#   backend:
#     container_name: backend-app
#     image: backend-app:1.0
#     environment:
#       - NODE_ENV=docker
#     build:
#       context: backend
#       dockerfile: Dockerfile
#     ports:
#       - 5000:5000
#     links:
#       - mongodb


#   mongodb:
#     image: mongo
#     ports:
#      - 27018:27017
#     environment:
#      - MONGO_INITDB_ROOT_USERNAME=admin
#      - MONGO_INITDB_ROOT_PASSWORD=password
#     volumes:
#      - mongo-data:/data/db
#     healthcheck:
#       test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
#       interval: 10s
#       timeout: 10s
#       retries: 5
#       start_period: 40s

#   mongo-express:
#     image: mongo-express
#     restart: always
#     ports:
#      - 8080:8081
#     environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
#      - ME_CONFIG_MONGODB_SERVER=mongodb
#     depends_on:
#      - "mongodb"
      
  
#   frontend:
#     container_name: frontend-app
#     image: frontend-app:1.0
#     environment:
#       - NODE_ENV=docker
#       - REACT_APP_API_BASE_URL=http://backend:5000
      
#     build: 
#       context: frontend
#       dockerfile: Dockerfile
#     ports:
#      - 3100:3000
#     depends_on:
#      - backend

#   user-frontend:
#     container_name: user-frontend-app
#     image: user-frontend-app:1.0
#     environment:
#       - NODE_ENV=docker
#       - REACT_APP_API_BASE_URL=http://backend:5000
#     build:
#       context: user-portal-frontend
#       dockerfile: Dockerfile

#     ports:

#       - 3200:3000


#     depends_on:
#       - backend
#       - frontend

# volumes:
#   mongo-data:
#     driver: local


version: '1'

services:
  frontend-user:
    build:
      context: ./Userclient
      dockerfile: Dockerfile
    container_name: frontend-user
    environment:
      - NODE_ENV=docker
    ports:
      - 3200:3000
    stdin_open: true
    tty: true
    depends_on:
      - backend-server
    networks:
      - mern-network


  frontend-admin:
    build:
      context: ./Adminclient
      dockerfile: Dockerfile
    container_name: frontend-admin
    environment:
      - NODE_ENV=docker
    ports:
      - 3300:3000
    stdin_open: true
    tty: true
    depends_on:
      - backend-server
    networks:
      - mern-network
      
  backend-server:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: backend-server
    restart: always
    ports:
      - 5000:5000
    stdin_open: true
    environment:
      - NODE_ENV=docker
    tty: true
    depends_on:
      - database
    networks:
      - mern-network

  database:
    image: mongo
    container_name: database
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - /home/yk/mongo-backup:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - mern-network
  
networks:
  mern-network:
    driver: bridge