name: Actions Workflow

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  PUBLIC_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
  AWS_REGION: ap-south-1
  PUBLIC_KEY: ${{ secrets.AWS_PUBLIC_KEY }}
  PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      SERVER_PUBLIC_IP: ${{ steps.set-ip.outputs.instance_public_ip}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME" -backend-config="region=ap-south-1"
        working-directory: ./ins-config
      - name: Terraform Plan
        run: terraform plan -destroy -var="region=ap-south-1" -var="public_key=$PUBLIC_SSH_KEY" -var="access_key=$PUBLIC_KEY" -var="secret_key=$PRIVATE_KEY" -var="private_key=$PRIVATE_SSH_KEY" -var="key_name=deployer-key" -out=PLAN
        working-directory: ./ins-config
      - name: Terraform Apply
        run: terraform apply PLAN
        working-directory: ./ins-config
      - name: Set output
        id: set-ip
        run: |-
          echo "::set-output name=instance_public_ip::$(terraform output instance_public_ip)"
        working-directory: ./ins-config

  # build-and-push-images:
  #   runs-on: ubuntu-latest
  #   needs: deploy-infra
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Set IP env variable
  #       run: echo SERVER_PUBLIC_IP=${{ needs.deploy-infra.outputs.SERVER_PUBLIC_IP }} >> $GITHUB_ENV
  #     - name: Build and Push Docker Images
  #       run: docker-compose -f docker-compose.yaml build
  #       working-directory: . 
  #     - name: Login to AWS ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  # deploy-app:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-images
  #   steps:
  #     - name: Deploy Docker Compose App
  #       env:
  #         AWS_DEFAULT_REGION: ap-south-1
  #       run: docker-compose -f docker-compose.yaml up -d
  #       working-directory: .
